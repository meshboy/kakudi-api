{"version":3,"sources":["../../../../src/api/resources/user/user.model.js"],"names":["userSchema","mongoose","Schema","email","type","String","unique","required","username","passwordHash","timestamps","methods","generateHashPassword","password","saltRounds","bcrypt","genSaltSync","hashSync","comparePassword","compareSync","User","model"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,aAAa,IAAIC,mBAASC,MAAb,CAAoB;AACnCC,WAAO;AACHC,cAAMC,MADH;AAEHC,gBAAQ,IAFL;AAGHC,kBAAU,CAAC,IAAD,EAAO,uCAAP;AAHP,KAD4B;;AAOnCC,cAAU;AACNJ,cAAMC,MADA;AAENE,kBAAU,CAAC,IAAD,EAAO,kBAAP;AAFJ,KAPyB;;AAYnCE,kBAAc;AACVL,cAAMC,MADI;AAEVE,kBAAU,CAAC,IAAD,EAAO,sBAAP;AAFA;AAZqB,CAApB,EAgBhB;AACCG,gBAAY;AADb,CAhBgB,CAAnB;;AAoBAV,WAAWW,OAAX,CAAmBC,oBAAnB,GAA0C,UAAUC,QAAV,EAAoB;AAC1D,UAAMC,aAAaC,uBAAOC,WAAP,CAAmB,EAAnB,CAAnB;AACA,WAAOD,uBAAOE,QAAP,CAAgBJ,QAAhB,EAA0BC,UAA1B,CAAP;AACH,CAHD;;AAKAd,WAAWW,OAAX,CAAmBO,eAAnB,GAAqC,UAAUL,QAAV,EAAoB;AACrD,WAAOE,uBAAOI,WAAP,CAAmBN,QAAnB,EAA6B,KAAKJ,YAAlC,CAAP;AACH,CAFD;;AAIO,MAAMW,sBAAOnB,mBAASoB,KAAT,CAAe,MAAf,EAAuBrB,UAAvB,CAAb","file":"user.model.js","sourcesContent":["import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt-nodejs';\n\nconst userSchema = new mongoose.Schema({\n    email: {\n        type: String,\n        unique: true,\n        required: [true, 'User must have a unique email address']\n    },\n\n    username: {\n        type: String,\n        required: [true, 'Name is required']\n    },\n\n    passwordHash: {\n        type: String,\n        required: [true, 'Password is required']\n    }\n}, {\n    timestamps: true\n});\n\nuserSchema.methods.generateHashPassword = function (password) {\n    const saltRounds = bcrypt.genSaltSync(10);\n    return bcrypt.hashSync(password, saltRounds);\n};\n\nuserSchema.methods.comparePassword = function (password) {\n    return bcrypt.compareSync(password, this.passwordHash);\n}\n\nexport const User = mongoose.model('User', userSchema);"]}